name: Deploy Backend

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install
        working-directory: backend
        
      - name: Build Backend
        run: npm run build
        working-directory: backend

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY_BACKEND }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 37.27.41.23 >> ~/.ssh/known_hosts

      - name: Deploy Backend via SSH
        run: |
          ssh root@37.27.41.23 "
            # Debugging und Fehlerbehandlung
            set -e
            echo 'Starte Deployment...'

            # Navigate to correct directory
            cd /root/retvent/backend
            
            # Fetch latest changes and reset to master
            echo 'Hole neueste Ã„nderungen...'
            git fetch origin master
            git reset --hard origin/master
            
            # Install dependencies and build
            echo 'Installiere Dependencies...'
            npm install
            npm run build
            
            # Create/Update .env file line by line
            echo 'Erstelle .env Datei...'
            echo 'PORT=4000' > .env
            echo 'MONGODB_URI=${{ secrets.MONGODB_URI }}' >> .env
            echo 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> .env
            echo 'OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}' >> .env
            echo 'MEETUP_API_KEY=${{ secrets.MEETUP_API_KEY }}' >> .env
            echo 'HETZNER_ACCESS_KEY'=${{secrets.HETZNER_ACCESS_KEY}} >> .env
            echo 'HETZNER_SECRET_KEY'=${{secrets.HETZNER_ACCESS_KEY}} >> .env
            echo 'HETZNER_BUCKET_NAME'=${{secrets.HETZNER_ACCESS_KEY}} >> .env
            chmod 600 .env
            
            # Restart PM2 process
            echo 'Starte PM2 neu...'
            pm2 delete events-backend || true
            pm2 start dist/main.js --name events-backend --watch
            pm2 save

            # Check status
            pm2 status
          "
